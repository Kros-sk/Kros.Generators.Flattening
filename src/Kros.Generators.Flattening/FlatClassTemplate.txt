﻿//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a Kros.Generators.Flattening tool.
// </auto-generated>
//------------------------------------------------------------------------------
using System.CodeDom.Compiler;
using System.Runtime.CompilerServices;
using Kros.Generators.Flattening;

namespace {{ Namespace }}
{
    {{ Modifier }} class {{ Name ~}}{{~ if CanGenerateMappingMethod ~}}: IFlat<{{ SourceTypeFullName }}> {{ end }}
    {
    {{- for prop in Properties }}
        {{ prop.Modifier }} {{ prop.Type }} {{ prop.Name }} { get; set; }
    {{ end }}
    
{{ if CanGenerateMappingMethod }}
        public {{ SourceTypeFullName }} ToComplex()
        {
            {{ SourceTypeFullName }} ret = new ();

            {{ ToComplexTemplate }}

            return ret;
        }

        public static {{ Name }} FromComplex({{ SourceTypeFullName }} source)
        {
            {{ Name }} ret = new();

            ret.FillFromComplex(source);

            return ret;
        }

        public void FillFromComplex({{ SourceTypeFullName }} source)
        {
            {{ ToFlattenTemplate }}
        }

        public static implicit operator {{ SourceTypeFullName }}({{ Name }} s) => s.ToComplex();
        public static explicit operator {{ Name }}({{ SourceTypeFullName }} s) => {{ Name }}.FromComplex(s);
{{ end }}
    }
}
